{"version":3,"sources":["components/drawer/AdminDrawer.js","components/staff/AdminTable.js","pages/Admin.js","components/form/SelectRole.js","hooks/useAdminSubmit.js"],"names":["AdminDrawer","_ref","id","register","handleSubmit","onSubmit","errors","imageUrl","setImageUrl","selectedDate","setSelectedDate","useAdminSubmit","_jsxs","_Fragment","children","_jsx","className","Title","title","description","Scrollbars","Card","CardBody","LabelArea","label","InputArea","name","type","pattern","placeholder","Error","errorName","email","required","autocomplete","password","Input","onChange","e","target","value","joiningDate","SelectRole","role","DrawerButton","AdminTable","staffs","serviceId","handleModalOpen","handleUpdate","useToggleDrawer","MainModal","MainDrawer","TableBody","map","staff","TableRow","TableCell","_id","substring","dayjs","joiningData","format","EditDeleteButton","Admin","state","useContext","AdminContext","adminInfo","toggleDrawer","SidebarContext","data","loading","useAsync","AdminServices","getAllAdmin","userRef","setRole","handleChangePage","totalResults","resultsPerPage","dataTable","serviceData","handleSubmitUser","useFilter","admin","PageTitle","Button","onClick","FiPlus","Loading","length","TableContainer","Table","TableHeader","TableFooter","Pagination","NotFound","Select","defaultValue","hidden","useState","location","useLocation","isDrawerOpen","closeDrawer","setIsUpdate","setValue","clearErrors","formState","useForm","useEffect","getAdminById","then","res","catch","err","notifyError","pathname","Cookies","get","user","JSON","parse","image","staffData","Date","updateAdmin","notifySuccess","message","addAdmin"],"mappings":"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","file":"static/js/22.b82cce63.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Scrollbars } from \"react-custom-scrollbars-2\";\r\nimport { Card, CardBody, Input } from \"@windmill/react-ui\";\r\n\r\nimport Title from \"../form/Title\";\r\nimport Error from \"../form/Error\";\r\nimport LabelArea from \"../form/LabelArea\";\r\nimport InputArea from \"../form/InputArea\";\r\nimport SelectRole from \"../form/SelectRole\";\r\nimport DrawerButton from \"../form/DrawerButton\";\r\nimport useAdminSubmit from \"../../hooks/useAdminSubmit\";\r\n\r\nconst AdminDrawer = ({ id }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    onSubmit,\r\n    errors,\r\n    imageUrl,\r\n    setImageUrl,\r\n    selectedDate,\r\n    setSelectedDate,\r\n  } = useAdminSubmit(id);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-full relative p-6 border-b border-gray-100 bg-gray-50 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-300\">\r\n        {id ? (\r\n          <Title\r\n            title=\"Update Admin\"\r\n            description=\"Updated your staff necessary information from here\"\r\n          />\r\n        ) : (\r\n          <Title\r\n            title=\"Add Admin\"\r\n            description=\"Add your staff necessary information from here\"\r\n          />\r\n        )}\r\n      </div>\r\n      <Scrollbars className=\"w-full md:w-7/12 lg:w-8/12 xl:w-8/12 relative dark:bg-gray-700 dark:text-gray-200\">\r\n        <Card className=\"overflow-y-scroll flex-grow scrollbar-hide w-full max-h-full\">\r\n          <CardBody>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n              <div className=\"px-6 pt-8 flex-grow scrollbar-hide w-full max-h-full pb-40\">\r\n                <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n                  <LabelArea label=\"Email\" />\r\n                  <div className=\"col-span-8 sm:col-span-4\">\r\n                    <InputArea\r\n                      register={register}\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      type=\"text\"\r\n                      pattern={\r\n                        /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/\r\n                      }\r\n                      placeholder=\"Email\"\r\n                    />\r\n                    <Error errorName={errors.email} />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n                  <LabelArea label=\"Password\" />\r\n                  <div className=\"col-span-8 sm:col-span-4\">\r\n                    {id ? (\r\n                      <InputArea\r\n                        required\r\n                        register={register}\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        autocomplete=\"new-password\"\r\n                        placeholder=\"Password\"\r\n                      />\r\n                    ) : (\r\n                      <InputArea\r\n                        register={register}\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        autocomplete=\"new-password\"\r\n                        placeholder=\"Password\"\r\n                      />\r\n                    )}\r\n\r\n                    <Error errorName={errors.password} />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n                  <LabelArea label=\"Joining Date\" />\r\n                  <div className=\"col-span-8 sm:col-span-4\">\r\n                    <Input\r\n                      onChange={(e) => setSelectedDate(e.target.value)}\r\n                      label=\"Joining Date\"\r\n                      name=\"joiningDate\"\r\n                      value={selectedDate}\r\n                      type=\"date\"\r\n                      className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n                      placeholder=\"Admin Joining Date\"\r\n                    />\r\n                    <Error errorName={errors.joiningDate} />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n                  <LabelArea label=\"Admin Role\" />\r\n                  <div className=\"col-span-8 sm:col-span-4\">\r\n                    <SelectRole register={register} label=\"Role\" name=\"role\" />\r\n                    <Error errorName={errors.role} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <DrawerButton id={id} title=\"Admin\" />\r\n            </form>\r\n          </CardBody>\r\n        </Card>\r\n      </Scrollbars>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminDrawer;\r\n","import React from \"react\";\r\nimport * as dayjs from \"dayjs\";\r\nimport { TableCell, TableBody, TableRow, Avatar } from \"@windmill/react-ui\";\r\n\r\nimport MainModal from \"../modal/MainModal\";\r\nimport MainDrawer from \"../drawer/MainDrawer\";\r\nimport AdminDrawer from \"../drawer/AdminDrawer\";\r\nimport useToggleDrawer from \"../../hooks/useToggleDrawer\";\r\nimport EditDeleteButton from \"../table/EditDeleteButton\";\r\n\r\nconst AdminTable = ({ staffs }) => {\r\n  const { title, serviceId, handleModalOpen, handleUpdate } = useToggleDrawer();\r\n  return (\r\n    <>\r\n      <MainModal id={serviceId} title={title} />\r\n      <MainDrawer>\r\n        <AdminDrawer id={serviceId} />\r\n      </MainDrawer>\r\n\r\n      <TableBody>\r\n        {staffs?.map((staff) => (\r\n          <TableRow key={staff._id}>\r\n            <TableCell>\r\n              <span className=\"font-semibold uppercase text-xs\">\r\n                {\" \"}\r\n                {staff._id.substring(20, 24)}\r\n              </span>\r\n            </TableCell>\r\n\r\n            <TableCell>\r\n              <span className=\"text-sm\">{staff.email}</span>{\" \"}\r\n            </TableCell>\r\n            <TableCell>\r\n              <span className=\"text-sm\">\r\n                {dayjs(staff.joiningData).format(\"MMM D, YYYY\")}\r\n              </span>\r\n            </TableCell>\r\n            <TableCell>\r\n              <span className=\"text-sm font-semibold\">{staff.role}</span>\r\n            </TableCell>\r\n            <TableCell>\r\n              <EditDeleteButton\r\n                id={staff._id}\r\n                title={staff.name}\r\n                handleUpdate={handleUpdate}\r\n                handleModalOpen={handleModalOpen}\r\n              />\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminTable;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableFooter,\r\n  TableContainer,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Pagination,\r\n} from \"@windmill/react-ui\";\r\nimport { FiPlus } from \"react-icons/fi\";\r\n\r\nimport useAsync from \"../hooks/useAsync\";\r\nimport useFilter from \"../hooks/useFilter\";\r\nimport NotFound from \"../components/table/NotFound\";\r\nimport Loading from \"../components/preloader/Loading\";\r\nimport AdminTable from \"../components/staff/AdminTable\";\r\nimport AdminServices from \"../services/AdminServices\";\r\nimport { AdminContext } from \"../context/AdminContext\";\r\nimport { SidebarContext } from \"../context/SidebarContext\";\r\nimport PageTitle from \"../components/Typography/PageTitle\";\r\nimport MainDrawer from \"../components/drawer/MainDrawer\";\r\nimport AdminDrawer from \"../components/drawer/AdminDrawer\";\r\n\r\nconst Admin = () => {\r\n  const { state } = useContext(AdminContext);\r\n  const { adminInfo } = state;\r\n  const { toggleDrawer } = useContext(SidebarContext);\r\n\r\n  const { data, loading } = useAsync(() =>\r\n    AdminServices.getAllAdmin()\r\n  );\r\n\r\n\r\n  const {\r\n    userRef,\r\n    setRole,\r\n    handleChangePage,\r\n    totalResults,\r\n    resultsPerPage,\r\n    dataTable,\r\n    serviceData,\r\n    handleSubmitUser,\r\n  } = useFilter(data.admin);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>All Admin</PageTitle>\r\n      <MainDrawer>\r\n        <AdminDrawer />\r\n      </MainDrawer>\r\n\r\n      <Card className=\"min-w-0 shadow-xs overflow-hidden bg-white dark:bg-gray-800 mb-5\">\r\n        <CardBody>\r\n          <form\r\n            onSubmit={handleSubmitUser}\r\n            className=\"py-3 grid gap-4 lg:gap-6 xl:gap-6 md:flex xl:flex\"\r\n          >\r\n            <div className=\"flex-grow-0 md:flex-grow lg:flex-grow xl:flex-grow\">\r\n             \r\n            </div>\r\n\r\n            <div className=\"w-full md:w-56 lg:w-56 xl:w-56\">\r\n              <Button onClick={toggleDrawer} className=\"w-full rounded-md h-12\">\r\n                <span className=\"mr-3\">\r\n                  <FiPlus />\r\n                </span>\r\n                Add Admin\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      {loading ? (\r\n        <Loading loading={loading} />\r\n      ) : serviceData.length !== 0 ? (\r\n        <TableContainer className=\"mb-8 rounded-b-lg\">\r\n          <Table>\r\n            <TableHeader>\r\n              <tr>\r\n                <TableCell>Id</TableCell>\r\n                <TableCell>Email</TableCell>\r\n                <TableCell>Joining Date</TableCell>\r\n                <TableCell>Role</TableCell>\r\n\r\n                <TableCell className=\"text-right\">Actions</TableCell>\r\n              </tr>\r\n            </TableHeader>\r\n            <AdminTable staffs={dataTable} />\r\n          </Table>\r\n          <TableFooter>\r\n            <Pagination\r\n              totalResults={totalResults}\r\n              resultsPerPage={resultsPerPage}\r\n              onChange={handleChangePage}\r\n              label=\"Table navigation\"\r\n            />\r\n          </TableFooter>\r\n        </TableContainer>\r\n      ) : (\r\n        <NotFound title=\"Admin\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import React from \"react\";\r\nimport { Select } from \"@windmill/react-ui\";\r\n\r\nconst SelectRole = ({ setRole, register, name, label }) => {\r\n  return (\r\n    <>\r\n      <Select\r\n        onChange={(e) => setRole(e.target.value)}\r\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n        name={name}\r\n        {...register(`${name}`, {\r\n          required: `${label} is required!`,\r\n        })}\r\n      >\r\n        <option value=\"\" defaultValue hidden>\r\n          Admin role\r\n        </option>\r\n        <option value=\"admin\">Admin</option>\r\n        <option value=\"restricted\">Restricted</option>\r\n      </Select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectRole;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Cookies from \"js-cookie\";\r\nimport dayjs from \"dayjs\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nimport AdminServices from \"../services/AdminServices\";\r\nimport { AdminContext } from \"../context/AdminContext\";\r\nimport { SidebarContext } from \"../context/SidebarContext\";\r\nimport { notifyError, notifySuccess } from \"../utils/toast\";\r\n\r\nconst useAdminSubmit = (id) => {\r\n  const { state } = useContext(AdminContext);\r\n  const { adminInfo } = state;\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const location = useLocation();\r\n  const { isDrawerOpen, closeDrawer, setIsUpdate } = useContext(SidebarContext);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    clearErrors,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    const staffData = {\r\n      email: data.email,\r\n      password: data.password,\r\n      joiningDate: selectedDate\r\n        ? selectedDate\r\n        : dayjs(new Date()).format(\"YYYY-MM-DD\"),\r\n      role: data.role,\r\n    };\r\n\r\n    if (id) {\r\n      AdminServices.updateAdmin(id, { email: adminInfo.email, data: staffData })\r\n        .then((res) => {\r\n          setIsUpdate(true);\r\n          notifySuccess(\"Admin Updated Successfully!\");\r\n        })\r\n        .catch((err) => notifyError(err.message));\r\n      closeDrawer();\r\n    } else {\r\n      AdminServices.addAdmin(staffData)\r\n        .then((res) => {\r\n          setIsUpdate(true);\r\n          notifySuccess(res.message);\r\n        })\r\n        .catch((err) => notifyError(err.message));\r\n      closeDrawer();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isDrawerOpen) {\r\n      setValue(\"email\");\r\n      setValue(\"password\");\r\n      setValue(\"joiningDate\");\r\n      setValue(\"role\");\r\n      clearErrors(\"email\");\r\n      clearErrors(\"password\");\r\n      clearErrors(\"joiningDate\");\r\n      clearErrors(\"role\");\r\n      return;\r\n    }\r\n    if (id) {\r\n      AdminServices.getAdminById(id)\r\n        .then((res) => {\r\n          if (res) {\r\n            setValue(\"email\", res.admin.email);\r\n            setValue(\"password\");\r\n            setValue(\"joiningDate\", res.admin.joiningData);\r\n            setValue(\"role\", res.admin.role);\r\n            setSelectedDate(dayjs(res.joiningData).format(\"YYYY-MM-DD\"));\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          notifyError(\"There is a server error!\");\r\n        });\r\n    }\r\n  }, [id, setValue, isDrawerOpen, adminInfo.email, clearErrors]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      location.pathname === \"/setting\" ||\r\n      (location.pathname === \"/edit-profile\" && Cookies.get(\"adminInfo\"))\r\n    ) {\r\n      const user = JSON.parse(Cookies.get(\"adminInfo\"));\r\n      setValue(\"email\", user.email);\r\n      setValue(\"role\", user.role);\r\n      setImageUrl(user.image);\r\n      setSelectedDate(dayjs(user.joiningData).format(\"YYYY-MM-DD\"));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return {\r\n    register,\r\n    handleSubmit,\r\n    onSubmit,\r\n    errors,\r\n    setImageUrl,\r\n    imageUrl,\r\n    selectedDate,\r\n    setSelectedDate,\r\n  };\r\n};\r\n\r\nexport default useAdminSubmit;\r\n"],"sourceRoot":""}