{"version":3,"sources":["components/customer/CustomerTable.js","pages/Users.js","components/table/ShowHideButton.js"],"names":["CustomerTable","_ref","customers","customerId","setCustomerId","useState","toggleModal","useContext","SidebarContext","title","setTitle","_jsxs","_Fragment","children","_jsx","MainModal","id","TableBody","map","user","TableRow","TableCell","className","dayjs","createdAt","format","firstName","email","userName","ShowHideButton","_id","status","accountDisabled","Link","to","Tooltip","Icon","FiZoomIn","bgColor","onClick","handleModalOpen","name","FiTrash2","Customers","toggleDrawer","currentPage","handleChangePage","searchText","category","setCategory","searchRef","handleSubmitForAll","setSearchText","sortedField","setSortedField","limitData","data","loading","useAsync","UserServices","getAllUsers","page","limit","price","serviceData","handleOnDrop","handleUploadProducts","useFilter","users","PageTitle","Card","CardBody","onSubmit","Input","ref","type","placeholder","Loading","length","TableContainer","Table","TableHeader","TableFooter","Pagination","totalResults","totalDoc","resultsPerPage","onChange","label","NotFound","customValue","customeKey","location","useLocation","setIsUpdate","handleChangeStatus","console","log","notifySuccess","pathname","updateUserById","then","res","catch","err","notifyError","message","ProductServices","updateProduct","available","ShopServices","updateShop","open","BsToggleOn","BsToggleOff"],"mappings":"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","file":"static/js/32.de7538e8.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as dayjs from \"dayjs\";\r\nimport { TableCell, TableBody, TableRow } from \"@windmill/react-ui\";\r\nimport { FiZoomIn, FiTrash2 } from \"react-icons/fi\";\r\n\r\nimport Tooltip from \"../tooltip/Tooltip\";\r\nimport MainModal from \"../modal/MainModal\";\r\nimport { SidebarContext } from \"../../context/SidebarContext\";\r\nimport ShowHideButton from \"../table/ShowHideButton\";\r\n\r\nconst CustomerTable = ({ customers }) => {\r\n  const [customerId, setCustomerId] = useState(\"\");\r\n  const { toggleModal } = useContext(SidebarContext);\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const handleModalOpen = (id, title) => {\r\n    setCustomerId(id);\r\n    toggleModal();\r\n    setTitle(title);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainModal id={customerId} title={title} />\r\n      <TableBody>\r\n        {customers?.map((user) => (\r\n          <TableRow key={user._id}>\r\n            <TableCell>\r\n              <span className=\"text-sm\">\r\n                {dayjs(user.createdAt).format(\"MMM D, YYYY\")}\r\n              </span>\r\n            </TableCell>\r\n            <TableCell>\r\n              <span className=\"text-sm\">{user.firstName}</span>\r\n            </TableCell>\r\n            <TableCell>\r\n              <span className=\"text-sm\">{user.email}</span>{\" \"}\r\n            </TableCell>\r\n            <TableCell>\r\n              <span className=\"text-sm font-medium\">{user.userName}</span>\r\n            </TableCell>\r\n            <TableCell>\r\n              <ShowHideButton id={user._id} status={!user.accountDisabled} />\r\n            </TableCell>\r\n            <TableCell>\r\n              <div className=\"flex justify-end text-right\">\r\n                <div className=\"p-2 cursor-pointer text-gray-400 hover:text-green-600\">\r\n                  {\" \"}\r\n                  <Link to={`/profile/${user._id}`}>\r\n                    <Tooltip\r\n                      id=\"view\"\r\n                      Icon={FiZoomIn}\r\n                      title=\"View Order\"\r\n                      bgColor=\"#34D399\"\r\n                    />\r\n                  </Link>\r\n                </div>\r\n                <div\r\n                  onClick={() => handleModalOpen(user._id, user.name)}\r\n                  className=\"p-2 cursor-pointer text-gray-400 hover:text-red-600\"\r\n                >\r\n                  <Tooltip\r\n                    id=\"delete\"\r\n                    Icon={FiTrash2}\r\n                    title=\"Delete\"\r\n                    bgColor=\"#F87171\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerTable;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableCell,\r\n  TableFooter,\r\n  TableContainer,\r\n  Input,\r\n  Card,\r\n  CardBody,\r\n  Pagination,\r\n} from \"@windmill/react-ui\";\r\n\r\nimport useAsync from \"../hooks/useAsync\";\r\nimport useFilter from \"../hooks/useFilter\";\r\nimport NotFound from \"../components/table/NotFound\";\r\nimport UserServices from \"../services/UserServices\";\r\nimport Loading from \"../components/preloader/Loading\";\r\nimport PageTitle from \"../components/Typography/PageTitle\";\r\nimport CustomerTable from \"../components/customer/CustomerTable\";\r\nimport { SidebarContext } from \"../context/SidebarContext\";\r\n\r\nconst Customers = () => {\r\n  const {\r\n    toggleDrawer,\r\n    currentPage,\r\n    handleChangePage,\r\n    searchText,\r\n    category,\r\n    setCategory,\r\n    searchRef,\r\n    handleSubmitForAll,\r\n    setSearchText,\r\n    sortedField,\r\n    setSortedField,\r\n    limitData,\r\n  } = useContext(SidebarContext);\r\n\r\n  const { data, loading } = useAsync(() =>\r\n    UserServices.getAllUsers({\r\n      page: currentPage,\r\n      limit: limitData,\r\n      category: category,\r\n\r\n      title: searchText,\r\n      price: sortedField,\r\n    })\r\n  );\r\n  const { serviceData, handleOnDrop, handleUploadProducts } = useFilter(\r\n    data.users\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Users</PageTitle>\r\n      <Card className=\"min-w-0 shadow-xs overflow-hidden bg-white dark:bg-gray-800 mb-5\">\r\n        <CardBody>\r\n          <form\r\n            onSubmit={handleSubmitForAll}\r\n            className=\"py-3 grid gap-4 lg:gap-6 xl:gap-6 md:flex xl:flex\"\r\n          >\r\n            <div className=\"flex-grow-0 md:flex-grow lg:flex-grow xl:flex-grow\">\r\n              <Input\r\n                ref={searchRef}\r\n                className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 border-transparent focus:bg-white\"\r\n                type=\"search\"\r\n                name=\"search\"\r\n                placeholder=\"Search by name\"\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                className=\"absolute right-0 top-0 mt-5 mr-1\"\r\n              ></button>\r\n            </div>\r\n          </form>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      {loading ? (\r\n        <Loading loading={loading} />\r\n      ) : serviceData.length !== 0 ? (\r\n        <TableContainer className=\"mb-8\">\r\n          <Table>\r\n            <TableHeader>\r\n              <tr>\r\n                <TableCell>Joining Date</TableCell>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>Email</TableCell>\r\n                <TableCell>userName</TableCell>\r\n                <TableCell>Disabled</TableCell>\r\n                <TableCell className=\"text-right\">Actions</TableCell>\r\n              </tr>\r\n            </TableHeader>\r\n            <CustomerTable customers={data.users} />\r\n          </Table>\r\n          <TableFooter>\r\n            <Pagination\r\n              totalResults={data.totalDoc}\r\n              resultsPerPage={limitData}\r\n              onChange={handleChangePage}\r\n              label=\"Table navigation\"\r\n            />\r\n          </TableFooter>\r\n        </TableContainer>\r\n      ) : (\r\n        <NotFound title=\"User\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Customers;\r\n","import React, { useContext } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { BsToggleOff, BsToggleOn } from \"react-icons/bs\";\r\n\r\nimport { notifySuccess, notifyError } from \"../../utils/toast\";\r\nimport ProductServices from \"../../services/ProductServices\";\r\nimport { SidebarContext } from \"../../context/SidebarContext\";\r\nimport UserServices from \"../../services/UserServices\";\r\nimport ShopServices from \"../../services/ShopServices\";\r\n\r\nconst ShowHideButton = ({ id, status, customValue = \"\", customeKey = \"\" }) => {\r\n  const location = useLocation();\r\n  const { setIsUpdate } = useContext(SidebarContext);\r\n\r\n  const handleChangeStatus = (id, status) => {\r\n    console.log(status);\r\n    notifySuccess(\"please wait...\");\r\n    if (location.pathname === \"/users\") {\r\n      UserServices.updateUserById(id, { accountDisabled: status })\r\n        .then((res) => {\r\n          setIsUpdate(true);\r\n          notifySuccess(\"status updated\");\r\n        })\r\n        .catch((err) => notifyError(err.message));\r\n    }\r\n\r\n    if (location.pathname === \"/products\") {\r\n      console.log(customeKey);\r\n      if ((customeKey = \"feature\")) {\r\n        ProductServices.updateProduct(id, { [customeKey]: customValue })\r\n          .then((res) => {\r\n            console.log(res);\r\n            setIsUpdate(true);\r\n            notifySuccess(\"status updated\");\r\n          })\r\n          .catch((err) => notifyError(err.message));\r\n      } else {\r\n        ProductServices.updateProduct(id, { available: !status })\r\n          .then((res) => {\r\n            console.log(res);\r\n            setIsUpdate(true);\r\n            notifySuccess(\"status updated\");\r\n          })\r\n          .catch((err) => notifyError(err.message));\r\n      }\r\n    }\r\n\r\n    if (location.pathname === \"/shops\") {\r\n      ShopServices.updateShop(id, { open: !status })\r\n        .then((res) => {\r\n          console.log(res);\r\n          setIsUpdate(true);\r\n          notifySuccess(\"status updated\");\r\n        })\r\n        .catch((err) => notifyError(err.message));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <span\r\n      className=\"cursor-pointer text-xl flex justify-center text-center\"\r\n      onClick={() => handleChangeStatus(id, status)}\r\n    >\r\n      {status == true ? (\r\n        <BsToggleOn className=\"text-green-500\" />\r\n      ) : (\r\n        <BsToggleOff className=\"text-orange-500\" />\r\n      )}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ShowHideButton;\r\n"],"sourceRoot":""}