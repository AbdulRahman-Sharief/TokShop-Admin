{"version":3,"sources":["pages/Login.js","services/AdminServices.js","services/httpService.js","components/form/Error.js","components/form/LabelArea.js","components/form/InputArea.js","hooks/useLoginSubmit.js"],"names":["Login","onSubmit","register","handleSubmit","errors","loading","useLoginSubmit","_jsx","_Fragment","children","className","_jsxs","LabelArea","label","InputArea","defaultValue","name","type","placeholder","Error","errorName","email","password","Button","disabled","to","AdminServices","registerAdmin","body","requests","post","loginAdmin","loginUser","authenticateUser","forgetPassword","put","resetPassword","signUpWithProvider","addAdmin","getAllAdmin","get","getAllPackages","getAllLivePackages","getAllLiveCoupons","getAllSubs","id","getAllLiveSubs","getAdminById","updateAdmin","patch","deleteAdmin","delete","updateAppSettings","getAppSettings","instance","axios","create","baseURL","timeout","headers","Accept","interceptors","request","use","config","adminInfo","Cookies","JSON","parse","authorization","token","responseBody","response","data","url","then","_ref","message","Label","required","Input","setLoading","useState","dispatch","useContext","AdminContext","history","useHistory","location","useLocation","formState","useForm","verifyEmail","role","pathname","res","console","log","notifySuccess","payload","set","stringify","expires","replace","catch","err","notifyError"],"mappings":"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","file":"static/js/14.35521432.chunk.js","sourcesContent":["import { Button } from \"@windmill/react-ui\";\n\nimport Error from \"../components/form/Error\";\nimport LabelArea from \"../components/form/LabelArea\";\nimport InputArea from \"../components/form/InputArea\";\nimport useLoginSubmit from \"../hooks/useLoginSubmit\";\nconst Login = () => {\n  const { onSubmit, register, handleSubmit, errors, loading } =\n    useLoginSubmit();\n  return (\n    <>\n      <div className=\"flex items-center min-h-screen p-6 bg-gray-50 dark:bg-gray-900\">\n        <div className=\"flex-1 h-full max-w-4xl mx-auto overflow-hidden bg-white rounded-lg shadow-xl dark:bg-gray-800\">\n          <div className=\"flex flex-col overflow-y-auto\">\n            <div className=\"h-32 md:h-auto md:w-1/2\"></div>\n            <main className=\"flex items-center justify-center p-6 sm:p-12 md:w-1/1\">\n              <div className=\"w-1/2 \">\n                <h1 className=\"flex justify-center text-2xl items-center font-semibold text-gray-700 dark:text-gray-200\">\n                  TokShop Admin\n                </h1>\n\n                <form onSubmit={handleSubmit(onSubmit)}>\n                  <LabelArea label=\"Email\" />\n                  <InputArea\n                    register={register}\n                    defaultValue=\"admin@gmail.com\"\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"john@doe.com\"\n                  />\n                  <Error errorName={errors.email} />\n                  <div className=\"mt-6\"></div>\n                  <LabelArea label=\"Password\" />\n                  <InputArea\n                    register={register}\n                    defaultValue=\"123456\"\n                    label=\"Password\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"***************\"\n                  />\n                  <Error errorName={errors.password} />\n                  <div className=\"mt-6\"></div>\n                  \n                  <Button\n                    disabled={loading}\n                    type=\"submit\"\n                    className=\"mt-4 h-12 w-full\"\n                    to=\"/dashboard\"\n                  >\n                    Log in\n                  </Button>\n                  <div className=\"mt-6\"></div>\n                  <div className=\"my-10\" />\n                </form>\n\n                <div className=\"flex flex-col text-white\">\n                  <h3 className=\"text-1xl font-semibold\">Test Logins</h3>\n                  <div>Email: admin@gmail.com</div>\n                  <div>Password: 123456</div>\n                </div>\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import requests from \"./httpService\";\n\nconst AdminServices = {\n  registerAdmin(body) {\n    return requests.post(\"/admin/register\", body);\n  },\n\n  loginAdmin(body) {\n    return requests.post(`/admin/login`, body);\n  },\n\n  loginUser(body) {\n    return requests.post(`/login`, body);\n  },\n  authenticateUser(body) {\n    return requests.post(`/authenticate/social`, body);\n  },\n\n  forgetPassword(body) {\n    return requests.put(\"/admin/forget-password\", body);\n  },\n\n  resetPassword(body) {\n    return requests.put(\"/admin/reset-password\", body);\n  },\n\n  signUpWithProvider(body) {\n    return requests.post(\"/admin/signup\", body);\n  },\n\n  addAdmin(body) {\n    return requests.post(\"/admin\", body);\n  },\n  getAllAdmin() {\n    return requests.get(\"/admin\");\n  },\n  getAllPackages() {\n    return requests.get(\"/packages\");\n  },\n  getAllLivePackages() {\n    return requests.get(\"/livePackges\");\n  },\n  getAllLiveCoupons() {\n    return requests.get(\"/coupons\");\n  },\n  getAllSubs(id) {\n    return requests.get(\"/subscriptions/AllSubscription/\" + id);\n  },\n  getAllLiveSubs(id) {\n    return requests.get(\"/auction-subscriptions/AllSubscription/\" + id);\n  },\n  getAdminById(id) {\n    return requests.get(`/admin/id/${id}`);\n  },\n\n  updateAdmin(id, body) {\n    return requests.patch(`/admin/${id}`, body);\n  },\n  deleteAdmin(id) {\n    return requests.delete(`/admin/${id}`);\n  },\n  updateAppSettings(body) {\n    return requests.post(`/admin/app/settings`, body);\n  },\n  getAppSettings() {\n    return requests.get(`/admin/app/settings`);\n  },\n};\n\nexport default AdminServices;\n","import axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nconst instance = axios.create({\r\n  baseURL: `${process.env.REACT_APP_API_BASE_URL}`,\r\n  timeout: 500000,\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  let adminInfo;\r\n  if (Cookies.get(\"adminInfo\")) {\r\n    adminInfo = JSON.parse(Cookies.get(\"adminInfo\"));\r\n  }\r\n\r\n  return {\r\n    ...config,\r\n    headers: {\r\n      authorization: adminInfo ? `Bearer ${adminInfo.token}` : null,\r\n    },\r\n  };\r\n});\r\n\r\nconst responseBody = (response) => response.data;\r\n\r\nconst requests = {\r\n  get: (url, body, headers) =>\r\n    instance.get(url, body, headers).then(responseBody),\r\n\r\n  post: (url, body) => instance.post(url, body).then(responseBody),\r\n\r\n  put: (url, body, headers) =>\r\n    instance.put(url, body, headers).then(responseBody),\r\n\r\n  patch: (url, body) => instance.patch(url, body).then(responseBody),\r\n\r\n  delete: (url) => instance.delete(url).then(responseBody),\r\n};\r\n\r\nexport default requests;\r\n","import React from \"react\";\r\n\r\nconst Error = ({ errorName }) => {\r\n  return (\r\n    <>\r\n      {errorName && (\r\n        <span className=\"text-red-400 text-sm mt-2\">{errorName.message}</span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { Label } from \"@windmill/react-ui\";\r\n\r\nconst LabelArea = ({ label }) => {\r\n  return (\r\n    <Label className=\"col-span-4 sm:col-span-2 font-medium text-sm\">\r\n      {label}\r\n    </Label>\r\n  );\r\n};\r\n\r\nexport default LabelArea;\r\n","import React from 'react';\r\nimport { Input } from '@windmill/react-ui';\r\n\r\nconst InputArea = ({\r\n  register,\r\n  defaultValue,\r\n  required,\r\n  name,\r\n  label,\r\n  type,\r\n  placeholder,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Input\r\n        {...register(`${name}`, {\r\n          required: required ? false : `${label} is required!`,\r\n        })}\r\n        defaultValue={defaultValue}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputArea;\r\n","import Cookies from \"js-cookie\";\nimport { useContext, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { AdminContext } from \"../context/AdminContext\";\nimport AdminServices from \"../services/AdminServices\";\nimport { notifyError, notifySuccess } from \"../utils/toast\";\n\nconst useLoginSubmit = () => {\n  const [loading, setLoading] = useState(false);\n  const { dispatch } = useContext(AdminContext);\n  const history = useHistory();\n  const location = useLocation();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = ({ name, email, verifyEmail, password, role }) => {\n    setLoading(true);\n    const cookieTimeOut = 0.5;\n\n    if (location.pathname === \"/login\") {\n      AdminServices.loginAdmin({ email, password })\n        .then((res) => {\n          console.log(res);\n          if (res) {\n            setLoading(false);\n            notifySuccess(\"Login Success!\");\n            dispatch({ type: \"USER_LOGIN\", payload: res[\"user\"] });\n            res[\"user\"][\"token\"] = res[\"accesstoken\"];\n            res[\"user\"][\"role\"] = \"admin\";\n\n            Cookies.set(\"adminInfo\", JSON.stringify(res[\"user\"]), {\n              expires: cookieTimeOut,\n            });\n            history.replace(\"/\");\n          }\n        })\n        .catch((err) => {\n          notifyError(err ? err.response.data.message : err.message);\n          setLoading(false);\n        });\n    }\n\n    if (location.pathname === \"/signup\") {\n      AdminServices.registerAdmin({ name, email, password, role })\n        .then((res) => {\n          if (res) {\n            setLoading(false);\n            notifySuccess(\"Register Success!\");\n            dispatch({ type: \"USER_LOGIN\", payload: res });\n            Cookies.set(\"adminInfo\", JSON.stringify(res), {\n              expires: cookieTimeOut,\n            });\n            history.replace(\"/\");\n          }\n        })\n        .catch((err) => {\n          notifyError(err ? err.response.data.message : err.message);\n          setLoading(false);\n        });\n    }\n\n    if (location.pathname === \"/forgot-password\") {\n      AdminServices.forgetPassword({ verifyEmail })\n        .then((res) => {\n          setLoading(false);\n          notifySuccess(res.message);\n        })\n        .catch((err) => {\n          setLoading(false);\n          notifyError(err ? err.response.data.message : err.message);\n        });\n    }\n  };\n  return {\n    onSubmit,\n    register,\n    handleSubmit,\n    errors,\n    loading,\n  };\n};\n\nexport default useLoginSubmit;\n"],"sourceRoot":""}