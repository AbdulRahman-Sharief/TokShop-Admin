{"version":3,"sources":["pages/ResetPassword.js","services/AdminServices.js","services/httpService.js","components/form/Error.js","components/form/LabelArea.js"],"names":["ResetPassword","token","useParams","password","useRef","loading","setLoading","useState","register","handleSubmit","watch","formState","errors","useForm","current","_jsx","className","children","_jsxs","onSubmit","_ref","newPassword","AdminServices","resetPassword","then","res","notifySuccess","message","catch","err","notifyError","response","data","LabelArea","label","Input","name","type","placeholder","required","minLength","value","Error","errorName","validate","confirm_password","Button","disabled","block","Link","to","registerAdmin","body","requests","post","loginAdmin","loginUser","authenticateUser","forgetPassword","put","signUpWithProvider","addAdmin","getAllAdmin","get","getAllPackages","getAllLivePackages","getAllLiveCoupons","getAllSubs","id","getAllLiveSubs","getAdminById","updateAdmin","patch","deleteAdmin","delete","updateAppSettings","getAppSettings","instance","axios","create","baseURL","timeout","headers","Accept","interceptors","request","use","config","adminInfo","Cookies","JSON","parse","authorization","responseBody","url","_Fragment","Label"],"mappings":"qGAAA,wFA0GeA,UA/FOA,KACpB,MAAM,MAAEC,GAAUC,cACZC,EAAWC,iBAAO,KACjBC,EAASC,GAAcC,oBAAS,IACjC,SACJC,EAAQ,aACRC,EAAY,MACZC,EACAC,WAAW,OAAEC,IACXC,cAEJV,EAASW,QAAUJ,EAAM,eAgBzB,OACEK,cAAA,OAAKC,UAAU,iEAAgEC,SAC7EF,cAAA,OAAKC,UAAU,iGAAgGC,SAC7GF,cAAA,OAAKC,UAAU,4CAA2CC,SACxDF,cAAA,QAAMC,UAAU,wDAAuDC,SACrEC,eAAA,OAAKF,UAAU,SAAQC,SAAA,CACrBF,cAAA,MAAIC,UAAU,8DAA6DC,SAAC,mBAI5EC,eAAA,QAAMC,SAAUV,GAxBNW,IAAsB,IAArB,YAAEC,GAAaD,EACpCd,GAAW,GAEXgB,IAAcC,cAAc,CAAEF,cAAapB,UACxCuB,MAAMC,IACLnB,GAAW,GACXoB,YAAcD,EAAIE,QAAQ,IAE3BC,OAAOC,IACNvB,GAAW,GACXwB,YAAYD,EAAMA,EAAIE,SAASC,KAAKL,QAAUE,EAAIF,QAAQ,GAC1D,IAakDV,SAAA,CAC1CF,cAACkB,IAAS,CAACC,MAAM,aACjBnB,cAACoB,QAAK,CACJD,MAAM,WACNE,KAAK,cACLC,KAAK,WACLC,YAAY,cACR9B,EAAS,cAAe,CAC1B+B,SAAU,8BACVC,UAAW,CACTC,MAAO,GACPd,QAAS,+CAGbX,UAAU,oHAEZD,cAAC2B,IAAK,CAACC,UAAW/B,EAAOS,cACzBN,cAAA,OAAKC,UAAU,SACfD,cAACkB,IAAS,CAACC,MAAM,qBACjBnB,cAACoB,QAAK,CACJD,MAAM,mBACNE,KAAK,mBACLC,KAAK,WACLC,YAAY,sBACR9B,EAAS,mBAAoB,CAC/BoC,SAAWH,GACTA,IAAUtC,EAASW,SACnB,+BAEJE,UAAU,oHAEZD,cAAC2B,IAAK,CAACC,UAAW/B,EAAOiC,mBAEzB9B,cAAC+B,SAAM,CACLC,SAAU1C,EACVgC,KAAK,SACLW,OAAK,EACLhC,UAAU,YAAWC,SACtB,aAIHF,cAAA,KAAGC,UAAU,OAAMC,SACjBF,cAACkC,IAAI,CACHjC,UAAU,yEACVkC,GAAG,SAAQjC,SACZ,+CAQP,C,kCCtGV,YAEA,MAAMK,EAAgB,CACpB6B,cAAcC,GACLC,IAASC,KAAK,kBAAmBF,GAG1CG,WAAWH,GACFC,IAASC,KAAM,eAAeF,GAGvCI,UAAUJ,GACDC,IAASC,KAAM,SAASF,GAEjCK,iBAAiBL,GACRC,IAASC,KAAM,uBAAuBF,GAG/CM,eAAeN,GACNC,IAASM,IAAI,yBAA0BP,GAGhD7B,cAAc6B,GACLC,IAASM,IAAI,wBAAyBP,GAG/CQ,mBAAmBR,GACVC,IAASC,KAAK,gBAAiBF,GAGxCS,SAAST,GACAC,IAASC,KAAK,SAAUF,GAEjCU,YAAWA,IACFT,IAASU,IAAI,UAEtBC,eAAcA,IACLX,IAASU,IAAI,aAEtBE,mBAAkBA,IACTZ,IAASU,IAAI,gBAEtBG,kBAAiBA,IACRb,IAASU,IAAI,YAEtBI,WAAWC,GACFf,IAASU,IAAI,kCAAoCK,GAE1DC,eAAeD,GACNf,IAASU,IAAI,0CAA4CK,GAElEE,aAAaF,GACJf,IAASU,IAAK,aAAYK,KAGnCG,YAAWA,CAACH,EAAIhB,IACPC,IAASmB,MAAO,UAASJ,IAAMhB,GAExCqB,YAAYL,GACHf,IAASqB,OAAQ,UAASN,KAEnCO,kBAAkBvB,GACTC,IAASC,KAAM,sBAAsBF,GAE9CwB,eAAcA,IACLvB,IAASU,IAAK,wBAIVzC,K,kCCrEf,qCAEA,MAAMuD,EAAWC,IAAMC,OAAO,CAC5BC,QAAU,2BACVC,QAAS,IACTC,QAAS,CACPC,OAAQ,mBACR,eAAgB,sBAKpBN,EAASO,aAAaC,QAAQC,KAAI,SAAUC,GAE1C,IAAIC,EAKJ,OAJIC,IAAQ1B,IAAI,eACdyB,EAAYE,KAAKC,MAAMF,IAAQ1B,IAAI,eAG9B,IACFwB,EACHL,QAAS,CACPU,cAAeJ,EAAa,UAASA,EAAUvF,QAAU,MAG/D,IAEA,MAAM4F,EAAgB9D,GAAaA,EAASC,KAEtCqB,EAAW,CACfU,IAAKA,CAAC+B,EAAK1C,EAAM8B,IACfL,EAASd,IAAI+B,EAAK1C,EAAM8B,GAAS1D,KAAKqE,GAExCvC,KAAMA,CAACwC,EAAK1C,IAASyB,EAASvB,KAAKwC,EAAK1C,GAAM5B,KAAKqE,GAEnDlC,IAAKA,CAACmC,EAAK1C,EAAM8B,IACfL,EAASlB,IAAImC,EAAK1C,EAAM8B,GAAS1D,KAAKqE,GAExCrB,MAAOA,CAACsB,EAAK1C,IAASyB,EAASL,MAAMsB,EAAK1C,GAAM5B,KAAKqE,GAErDnB,OAASoB,GAAQjB,EAASH,OAAOoB,GAAKtE,KAAKqE,IAG9BxC,K,kCC3Cf,gBAYeX,IAVDtB,IAAoB,IAAnB,UAAEuB,GAAWvB,EAC1B,OACEL,cAAAgF,WAAA,CAAA9E,SACG0B,GACC5B,cAAA,QAAMC,UAAU,4BAA2BC,SAAE0B,EAAUhB,WAExD,C,kCCRP,wBAWeM,IARGb,IAAgB,IAAf,MAAEc,GAAOd,EAC1B,OACEL,cAACiF,QAAK,CAAChF,UAAU,+CAA8CC,SAC5DiB,GACK,C","file":"static/js/16.d9076c83.chunk.js","sourcesContent":["import { Button, Input } from '@windmill/react-ui';\r\nimport React, { useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport Error from '../components/form/Error';\r\nimport LabelArea from '../components/form/LabelArea';\r\nimport AdminServices from '../services/AdminServices';\r\nimport { notifyError, notifySuccess } from '../utils/toast';\r\n\r\nconst ResetPassword = () => {\r\n  const { token } = useParams();\r\n  const password = useRef('');\r\n  const [loading, setLoading] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  password.current = watch('newPassword');\r\n\r\n  const submitHandler = ({ newPassword }) => {\r\n    setLoading(true);\r\n\r\n    AdminServices.resetPassword({ newPassword, token })\r\n      .then((res) => {\r\n        setLoading(false);\r\n        notifySuccess(res.message);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        notifyError(err ? err.response.data.message : err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center min-h-screen p-6 bg-gray-50 dark:bg-gray-900\">\r\n      <div className=\"flex-1 h-full max-w-4xl mx-auto overflow-hidden bg-white rounded-lg shadow-xl dark:bg-gray-800\">\r\n        <div className=\"flex flex-col overflow-y-auto md:flex-row\">\r\n          <main className=\"flex items-center justify-center p-6 sm:p-12 md:w-1/2\">\r\n            <div className=\"w-full\">\r\n              <h1 className=\"mb-4 text-xl font-semibold text-gray-700 dark:text-gray-200\">\r\n                Reset password\r\n              </h1>\r\n\r\n              <form onSubmit={handleSubmit(submitHandler)}>\r\n                <LabelArea label=\"Password\" />\r\n                <Input\r\n                  label=\"Password\"\r\n                  name=\"newPassword\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  {...register('newPassword', {\r\n                    required: 'You must specify a password',\r\n                    minLength: {\r\n                      value: 10,\r\n                      message: 'Password must have at least 10 characters',\r\n                    },\r\n                  })}\r\n                  className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n                />\r\n                <Error errorName={errors.newPassword} />\r\n                <div className=\"mt-6\"></div>\r\n                <LabelArea label=\"Confirm Password\" />\r\n                <Input\r\n                  label=\"Confirm Password\"\r\n                  name=\"confirm_password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  {...register('confirm_password', {\r\n                    validate: (value) =>\r\n                      value === password.current ||\r\n                      'The passwords do not match',\r\n                  })}\r\n                  className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n                />\r\n                <Error errorName={errors.confirm_password} />\r\n\r\n                <Button\r\n                  disabled={loading}\r\n                  type=\"submit\"\r\n                  block\r\n                  className=\"mt-4 h-12\"\r\n                >\r\n                  Reset\r\n                </Button>\r\n              </form>\r\n              <p className=\"mt-4\">\r\n                <Link\r\n                  className=\"text-sm font-medium text-green-500 dark:text-green-400 hover:underline\"\r\n                  to=\"/login\"\r\n                >\r\n                  Already have an account? Login\r\n                </Link>\r\n              </p>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import requests from \"./httpService\";\n\nconst AdminServices = {\n  registerAdmin(body) {\n    return requests.post(\"/admin/register\", body);\n  },\n\n  loginAdmin(body) {\n    return requests.post(`/admin/login`, body);\n  },\n\n  loginUser(body) {\n    return requests.post(`/login`, body);\n  },\n  authenticateUser(body) {\n    return requests.post(`/authenticate/social`, body);\n  },\n\n  forgetPassword(body) {\n    return requests.put(\"/admin/forget-password\", body);\n  },\n\n  resetPassword(body) {\n    return requests.put(\"/admin/reset-password\", body);\n  },\n\n  signUpWithProvider(body) {\n    return requests.post(\"/admin/signup\", body);\n  },\n\n  addAdmin(body) {\n    return requests.post(\"/admin\", body);\n  },\n  getAllAdmin() {\n    return requests.get(\"/admin\");\n  },\n  getAllPackages() {\n    return requests.get(\"/packages\");\n  },\n  getAllLivePackages() {\n    return requests.get(\"/livePackges\");\n  },\n  getAllLiveCoupons() {\n    return requests.get(\"/coupons\");\n  },\n  getAllSubs(id) {\n    return requests.get(\"/subscriptions/AllSubscription/\" + id);\n  },\n  getAllLiveSubs(id) {\n    return requests.get(\"/auction-subscriptions/AllSubscription/\" + id);\n  },\n  getAdminById(id) {\n    return requests.get(`/admin/id/${id}`);\n  },\n\n  updateAdmin(id, body) {\n    return requests.patch(`/admin/${id}`, body);\n  },\n  deleteAdmin(id) {\n    return requests.delete(`/admin/${id}`);\n  },\n  updateAppSettings(body) {\n    return requests.post(`/admin/app/settings`, body);\n  },\n  getAppSettings() {\n    return requests.get(`/admin/app/settings`);\n  },\n};\n\nexport default AdminServices;\n","import axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nconst instance = axios.create({\r\n  baseURL: `${process.env.REACT_APP_API_BASE_URL}`,\r\n  timeout: 500000,\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(function (config) {\r\n  // Do something before request is sent\r\n  let adminInfo;\r\n  if (Cookies.get(\"adminInfo\")) {\r\n    adminInfo = JSON.parse(Cookies.get(\"adminInfo\"));\r\n  }\r\n\r\n  return {\r\n    ...config,\r\n    headers: {\r\n      authorization: adminInfo ? `Bearer ${adminInfo.token}` : null,\r\n    },\r\n  };\r\n});\r\n\r\nconst responseBody = (response) => response.data;\r\n\r\nconst requests = {\r\n  get: (url, body, headers) =>\r\n    instance.get(url, body, headers).then(responseBody),\r\n\r\n  post: (url, body) => instance.post(url, body).then(responseBody),\r\n\r\n  put: (url, body, headers) =>\r\n    instance.put(url, body, headers).then(responseBody),\r\n\r\n  patch: (url, body) => instance.patch(url, body).then(responseBody),\r\n\r\n  delete: (url) => instance.delete(url).then(responseBody),\r\n};\r\n\r\nexport default requests;\r\n","import React from \"react\";\r\n\r\nconst Error = ({ errorName }) => {\r\n  return (\r\n    <>\r\n      {errorName && (\r\n        <span className=\"text-red-400 text-sm mt-2\">{errorName.message}</span>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { Label } from \"@windmill/react-ui\";\r\n\r\nconst LabelArea = ({ label }) => {\r\n  return (\r\n    <Label className=\"col-span-4 sm:col-span-2 font-medium text-sm\">\r\n      {label}\r\n    </Label>\r\n  );\r\n};\r\n\r\nexport default LabelArea;\r\n"],"sourceRoot":""}