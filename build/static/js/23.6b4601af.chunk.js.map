{"version":3,"sources":["pages/EditProfile.js","components/form/SelectRole.js","hooks/useAdminSubmit.js"],"names":["EditProfile","state","adminInfo","token","useContext","AdminContext","register","handleSubmit","onSubmit","errors","imageUrl","setImageUrl","useAdminSubmit","_id","_jsxs","_Fragment","children","_jsx","PageTitle","className","LabelArea","label","SelectRole","name","Error","errorName","role","InputArea","defaultValue","type","placeholder","Button","_ref","setRole","Select","onChange","e","target","value","required","hidden","id","useState","selectedDate","setSelectedDate","location","useLocation","isDrawerOpen","closeDrawer","setIsUpdate","SidebarContext","setValue","clearErrors","formState","useForm","useEffect","AdminServices","getAdminById","then","res","admin","email","joiningData","dayjs","format","catch","err","notifyError","pathname","Cookies","get","user","JSON","parse","image","data","staffData","password","joiningDate","Date","updateAdmin","notifySuccess","message","addAdmin"],"mappings":"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","file":"static/js/23.6b4601af.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Button } from \"@windmill/react-ui\";\r\n\r\nimport Error from \"../components/form/Error\";\r\nimport useAdminSubmit from \"../hooks/useAdminSubmit\";\r\nimport LabelArea from \"../components/form/LabelArea\";\r\nimport InputArea from \"../components/form/InputArea\";\r\nimport { AdminContext } from \"../context/AdminContext\";\r\nimport SelectRole from \"../components/form/SelectRole\";\r\nimport PageTitle from \"../components/Typography/PageTitle\";\r\n\r\nconst EditProfile = () => {\r\n  const {\r\n    state: { adminInfo, token },\r\n  } = useContext(AdminContext);\r\n\r\n  const { register, handleSubmit, onSubmit, errors, imageUrl, setImageUrl } =\r\n    useAdminSubmit(adminInfo._id);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle>Admin Settings</PageTitle>\r\n      <div className=\"container p-6 mx-auto bg-white  dark:bg-gray-800 dark:text-gray-200 rounded-lg\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"p-6 flex-grow scrollbar-hide w-full max-h-full\">\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label=\"Your Role\" />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <SelectRole register={register} label=\"Role\" name=\"role\" />\r\n                <Error errorName={errors.role} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"p-6 flex-grow scrollbar-hide w-full max-h-full\">\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label=\"Wooocommerce Security Key\" />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <InputArea\r\n                  register={register}\r\n                  defaultValue=\"\"\r\n                  label=\"SecurityKey \"\r\n                  name=\"wcSecretKey\"\r\n                  type=\"wcSecretKey\"\r\n                  placeholder=\"security key\"\r\n                />\r\n                <Error errorName={errors.role} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"p-6 flex-grow scrollbar-hide w-full max-h-full\">\r\n            <div className=\"grid grid-cols-6 gap-3 md:gap-5 xl:gap-6 lg:gap-6 mb-6\">\r\n              <LabelArea label=\"Wooocommerce Consumer Key\" />\r\n              <div className=\"col-span-8 sm:col-span-4\">\r\n                <InputArea\r\n                  register={register}\r\n                  defaultValue=\"\"\r\n                  label=\"ConsumerKey \"\r\n                  name=\"wcConsumerKey\"\r\n                  type=\"wcConsumerKey\"\r\n                  placeholder=\"consumer key\"\r\n                />\r\n                <Error errorName={errors.role} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex flex-row-reverse pr-6 pb-6\">\r\n            <Button type=\"submit\" className=\"h-12 px-6\">\r\n              Update Settings\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","import React from \"react\";\r\nimport { Select } from \"@windmill/react-ui\";\r\n\r\nconst SelectRole = ({ setRole, register, name, label }) => {\r\n  return (\r\n    <>\r\n      <Select\r\n        onChange={(e) => setRole(e.target.value)}\r\n        className=\"border h-12 text-sm focus:outline-none block w-full bg-gray-100 dark:bg-white border-transparent focus:bg-white\"\r\n        name={name}\r\n        {...register(`${name}`, {\r\n          required: `${label} is required!`,\r\n        })}\r\n      >\r\n        <option value=\"\" defaultValue hidden>\r\n          Admin role\r\n        </option>\r\n        <option value=\"admin\">Admin</option>\r\n        <option value=\"restricted\">Restricted</option>\r\n      </Select>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectRole;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Cookies from \"js-cookie\";\r\nimport dayjs from \"dayjs\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nimport AdminServices from \"../services/AdminServices\";\r\nimport { AdminContext } from \"../context/AdminContext\";\r\nimport { SidebarContext } from \"../context/SidebarContext\";\r\nimport { notifyError, notifySuccess } from \"../utils/toast\";\r\n\r\nconst useAdminSubmit = (id) => {\r\n  const { state } = useContext(AdminContext);\r\n  const { adminInfo } = state;\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const location = useLocation();\r\n  const { isDrawerOpen, closeDrawer, setIsUpdate } = useContext(SidebarContext);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    clearErrors,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    const staffData = {\r\n      email: data.email,\r\n      password: data.password,\r\n      joiningDate: selectedDate\r\n        ? selectedDate\r\n        : dayjs(new Date()).format(\"YYYY-MM-DD\"),\r\n      role: data.role,\r\n    };\r\n\r\n    if (id) {\r\n      AdminServices.updateAdmin(id, { email: adminInfo.email, data: staffData })\r\n        .then((res) => {\r\n          setIsUpdate(true);\r\n          notifySuccess(\"Admin Updated Successfully!\");\r\n        })\r\n        .catch((err) => notifyError(err.message));\r\n      closeDrawer();\r\n    } else {\r\n      AdminServices.addAdmin(staffData)\r\n        .then((res) => {\r\n          setIsUpdate(true);\r\n          notifySuccess(res.message);\r\n        })\r\n        .catch((err) => notifyError(err.message));\r\n      closeDrawer();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isDrawerOpen) {\r\n      setValue(\"email\");\r\n      setValue(\"password\");\r\n      setValue(\"joiningDate\");\r\n      setValue(\"role\");\r\n      clearErrors(\"email\");\r\n      clearErrors(\"password\");\r\n      clearErrors(\"joiningDate\");\r\n      clearErrors(\"role\");\r\n      return;\r\n    }\r\n    if (id) {\r\n      AdminServices.getAdminById(id)\r\n        .then((res) => {\r\n          if (res) {\r\n            setValue(\"email\", res.admin.email);\r\n            setValue(\"password\");\r\n            setValue(\"joiningDate\", res.admin.joiningData);\r\n            setValue(\"role\", res.admin.role);\r\n            setSelectedDate(dayjs(res.joiningData).format(\"YYYY-MM-DD\"));\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          notifyError(\"There is a server error!\");\r\n        });\r\n    }\r\n  }, [id, setValue, isDrawerOpen, adminInfo.email, clearErrors]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      location.pathname === \"/setting\" ||\r\n      (location.pathname === \"/edit-profile\" && Cookies.get(\"adminInfo\"))\r\n    ) {\r\n      const user = JSON.parse(Cookies.get(\"adminInfo\"));\r\n      setValue(\"email\", user.email);\r\n      setValue(\"role\", user.role);\r\n      setImageUrl(user.image);\r\n      setSelectedDate(dayjs(user.joiningData).format(\"YYYY-MM-DD\"));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return {\r\n    register,\r\n    handleSubmit,\r\n    onSubmit,\r\n    errors,\r\n    setImageUrl,\r\n    imageUrl,\r\n    selectedDate,\r\n    setSelectedDate,\r\n  };\r\n};\r\n\r\nexport default useAdminSubmit;\r\n"],"sourceRoot":""}