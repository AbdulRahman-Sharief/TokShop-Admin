{"version":3,"sources":["context/AdminContext.js","context/SidebarContext.js","utils/toast.js","components/theme/ThemeSuspense.js","components/AccessibleNavigationAnnouncer.js","components/login/PrivateRoute.js","App.js","assets/theme/myTheme.js","index.js"],"names":["AdminContext","createContext","initialState","adminInfo","Cookies","get","JSON","parse","token","reducer","state","action","type","payload","AdminProvider","_ref","children","dispatch","useReducer","value","_jsx","Provider","SidebarContext","SidebarProvider","isSidebarOpen","setIsSidebarOpen","useState","isDrawerOpen","setIsDrawerOpen","isModalOpen","setIsModalOpen","isUpdate","setIsUpdate","limitData","setLimitData","isBulkDrawerOpen","setIsBulkDrawerOpen","lang","setLang","time","setTime","sortedField","setSortedField","currentPage","setCurrentPage","searchText","setSearchText","zone","setZone","status","setStatus","files","setFiles","source","setSource","category","setCategory","searchRef","useRef","searchUser","setSearchUser","userRef","toggleSidebar","closeSidebar","toggleDrawer","closeDrawer","toggleModal","closeModal","closeBulkDrawer","toggleBulkDrawer","handleChangePage","p","handleSubmitForAll","e","preventDefault","current","resultsPerPage","handleSubmitUser","notifySuccess","message","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","notifyError","error","ToastContainer","ThemeSuspense","className","AccessibleNavigationAnnouncer","setMessage","location","useLocation","useEffect","pathname","slice","setTimeout","role","PrivateRoute","rest","useContext","Route","render","_ref2","email","Redirect","to","from","Layout","lazy","Login","SignUp","ForgetPassword","ResetPassword","App","_jsxs","_Fragment","Router","Switch","path","component","exact","myTheme","alert","base","withClose","danger","warning","neutral","info","icon","pagination","tableFooter","tableRow","tableHeader","tableContainer","tableCell","tableBody","dropdownItem","dropdown","align","left","right","avatar","size","large","regular","small","modal","modalBody","modalFooter","modalHeader","badge","primary","backdrop","textarea","active","disabled","valid","invalid","select","label","check","input","radio","checkbox","helperText","card","default","cardBody","button","block","larger","outline","link","ReactDOM","Suspense","fallback","Windmill","usePreferences","theme","document","getElementById"],"mappings":"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","file":"static/js/main.baa1e7ed.chunk.js","sourcesContent":["import Cookies from 'js-cookie';\r\nimport React, { createContext, useReducer } from 'react';\r\n\r\nexport const AdminContext = createContext();\r\n\r\nconst initialState = {\r\n  adminInfo: Cookies.get(\"adminInfo\")\r\n    ? JSON.parse(Cookies.get(\"adminInfo\"))\r\n    : null,\r\n  token: Cookies.get(\"token\") ? Cookies.get(\"token\") : null,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case 'USER_LOGIN':\r\n      return { ...state, adminInfo: action.payload };\r\n\r\n    case 'USER_LOGOUT':\r\n      return {\r\n        ...state,\r\n        adminInfo: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const AdminProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const value = { state, dispatch };\r\n  return (\r\n    <AdminContext.Provider value={value}>{children}</AdminContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, createContext, useRef, useEffect } from \"react\";\r\n\r\n// create context\r\nexport const SidebarContext = createContext();\r\n\r\nexport const SidebarProvider = ({ children }) => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isUpdate, setIsUpdate] = useState(false);\r\n  const resultsPerPage = 20;\r\n  const [limitData, setLimitData] = useState(20);\r\n  const [isBulkDrawerOpen, setIsBulkDrawerOpen] = useState(false);\r\n  const [lang, setLang] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n  const [sortedField, setSortedField] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchText, setSearchText] = useState(null);\r\n  const [zone, setZone] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [files, setFiles] = useState([]);\r\n  const [source, setSource] = useState(\"\");\r\n  const [category, setCategory] = useState(null);\r\n  const searchRef = useRef(\"\");\r\n  const [searchUser, setSearchUser] = useState(null);\r\n  const userRef = useRef(\"\");\r\n\r\n  const closeSidebar = () => setIsSidebarOpen(false);\r\n  const toggleSidebar = () => setIsSidebarOpen(!isSidebarOpen);\r\n\r\n  const closeDrawer = () => setIsDrawerOpen(false);\r\n  const toggleDrawer = () => setIsDrawerOpen(!isDrawerOpen);\r\n\r\n  const closeModal = () => setIsModalOpen(false);\r\n  const toggleModal = () => setIsModalOpen(!isModalOpen);\r\n\r\n  const closeBulkDrawer = () => setIsBulkDrawerOpen(false);\r\n  const toggleBulkDrawer = () => setIsBulkDrawerOpen(!isBulkDrawerOpen);\r\n\r\n  const handleChangePage = (p) => {\r\n    setCurrentPage(p);\r\n  };\r\n\r\n  const handleSubmitForAll = (e) => {\r\n    e.preventDefault();\r\n    if (!searchRef.current.value) return setSearchText(null);\r\n    setCategory(null);\r\n    setSearchText(searchRef.current.value);\r\n  };\r\n\r\n  const handleSubmitUser = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!userRef.current.value) return setSearchText(null);\r\n    setSearchText(userRef.current.value);\r\n  };\r\n\r\n  // const value = useMemo(\r\n  //   () => ({\r\n  //     isSidebarOpen,\r\n  //     toggleSidebar,\r\n  //     closeSidebar,\r\n  //     isDrawerOpen,\r\n  //     toggleDrawer,\r\n  //     closeDrawer,\r\n  //     setIsDrawerOpen,\r\n  //     isModalOpen,\r\n  //     toggleModal,\r\n  //     closeModal,\r\n  //     isUpdate,\r\n  //     setIsUpdate,\r\n  //   }),\r\n\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  //   [isSidebarOpen, isDrawerOpen, isModalOpen, isUpdate]\r\n  // );\r\n\r\n  return (\r\n    <SidebarContext.Provider\r\n      value={{\r\n        isSidebarOpen,\r\n        toggleSidebar,\r\n        closeSidebar,\r\n        isDrawerOpen,\r\n        toggleDrawer,\r\n        closeDrawer,\r\n        setIsDrawerOpen,\r\n        isModalOpen,\r\n        toggleModal,\r\n        closeModal,\r\n        isUpdate,\r\n        setIsUpdate,\r\n        closeBulkDrawer,\r\n        isBulkDrawerOpen,\r\n        toggleBulkDrawer,\r\n        lang,\r\n        setLang,\r\n        currentPage,\r\n        setCurrentPage,\r\n        handleChangePage,\r\n        searchText,\r\n        setSearchText,\r\n        category,\r\n        setCategory,\r\n        searchRef,\r\n        handleSubmitForAll,\r\n        status,\r\n        setStatus,\r\n        files,\r\n        setFiles,\r\n        zone,\r\n        setZone,\r\n        time,\r\n        setTime,\r\n        sortedField,\r\n        setSortedField,\r\n        source,\r\n        setSource,\r\n        resultsPerPage,\r\n        limitData,\r\n        setLimitData,\r\n        handleSubmitUser,\r\n        userRef,\r\n        searchUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </SidebarContext.Provider>\r\n  );\r\n};\r\n","import { ToastContainer, toast } from 'react-toastify';\r\nimport React from 'react';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst notifySuccess = (message) =>\r\n  toast.success(message, {\r\n    position: 'top-center',\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n\r\nconst notifyError = (message) =>\r\n  toast.error(message, {\r\n    position: 'top-center',\r\n    autoClose: 3000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n\r\n// eslint-disable-next-line no-unused-expressions\r\n<ToastContainer\r\n  position=\"top-center\"\r\n  autoClose={3000}\r\n  hideProgressBar={false}\r\n  newestOnTop={false}\r\n  closeOnClick\r\n  rtl={false}\r\n  pauseOnFocusLoss\r\n  draggable\r\n  pauseOnHover\r\n/>;\r\n\r\nexport { ToastContainer, notifySuccess, notifyError };\r\n","import React from \"react\";\r\n\r\nconst ThemeSuspense = () => {\r\n  return (\r\n    <div className=\"w-full h-screen p-6 text-lg font-medium text-gray-600 dark:text-gray-400 dark:bg-gray-900\">\r\n      Loading...\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeSuspense;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nfunction AccessibleNavigationAnnouncer() {\r\n  const [message, setMessage] = useState('')\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    // ignore the /\r\n    if (location.pathname.slice(1)) {\r\n      // make sure navigation has occurred and screen reader is ready\r\n      setTimeout(() => setMessage(`Navigated to ${location.pathname.slice(1)} page.`), 500)\r\n    } else {\r\n      setMessage('')\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <span className=\"sr-only\" role=\"status\" aria-live=\"polite\" aria-atomic=\"true\">\r\n      {message}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default AccessibleNavigationAnnouncer\r\n","import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { AdminContext } from '../../context/AdminContext';\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n  const { state } = useContext(AdminContext);\r\n  const { adminInfo } = state;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        adminInfo?.email ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/login',\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { lazy } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { ToastContainer } from './utils/toast';\nimport AccessibleNavigationAnnouncer from './components/AccessibleNavigationAnnouncer';\nimport PrivateRoute from './components/login/PrivateRoute';\n\nconst Layout = lazy(() => import('./layout/Layout'));\nconst Login = lazy(() => import('./pages/Login'));\nconst SignUp = lazy(() => import('./pages/SignUp'));\nconst ForgetPassword = lazy(() => import('./pages/ForgotPassword'));\nconst ResetPassword = lazy(() => import('./pages/ResetPassword'));\n\nconst App = () => {\n  return (\n    <>\n      <ToastContainer />\n      <Router>\n        <AccessibleNavigationAnnouncer />\n        <Switch>\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/forgot-password\" component={ForgetPassword} />\n          <Route path=\"/reset-password/:token\" component={ResetPassword} />\n\n          <PrivateRoute>\n            {' '}\n            <Route path=\"/\" component={Layout} />\n          </PrivateRoute>\n          <Redirect exact from=\"/\" to=\"/login\" />\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","const myTheme = {\r\n  // Alert\r\n  alert: {\r\n    base: 'p-4 pl-12 relative rounded-lg leading-5',\r\n    withClose: 'pr-12',\r\n    success: 'bg-green-50 text-green-900 dark:bg-green-600 dark:text-white',\r\n    danger: 'bg-red-50 text-red-900 dark:bg-red-600 dark:text-white',\r\n    warning: 'bg-yellow-50 text-yellow-900 dark:bg-yellow-600 dark:text-white',\r\n    neutral: 'bg-gray-50 text-gray-800 dark:bg-gray-700 dark:text-gray-300',\r\n    info: 'bg-blue-50 text-blue-900 dark:bg-blue-600 dark:text-white',\r\n    icon: {\r\n      base: 'h-5 w-5',\r\n      success: 'text-green-400 dark:text-green-300',\r\n      danger: 'text-red-400 dark:text-red-300',\r\n      warning: 'text-yellow-400 dark:text-yellow-100',\r\n      neutral: 'text-gray-400 dark:text-gray-500',\r\n      info: 'text-blue-400 dark:text-blue-300',\r\n    },\r\n  },\r\n  // Pagination\r\n  pagination: {\r\n    base: 'flex flex-col justify-between text-xs sm:flex-row text-gray-600 dark:text-gray-400',\r\n  },\r\n  // TableFooter\r\n  tableFooter: {\r\n    base: 'px-4 py-3 border-t border-gray-200 dark:border-gray-700 bg-white text-gray-500 dark:text-gray-400 dark:bg-gray-800',\r\n  },\r\n  // TableRow\r\n  tableRow: {\r\n    base: '',\r\n  },\r\n  // TableHeader\r\n  tableHeader: {\r\n    base: 'text-xs font-semibold tracking-wide text-left text-gray-500 uppercase border-b border-gray-200 dark:border-gray-700 bg-gray-100 dark:text-gray-400 dark:bg-gray-800',\r\n  },\r\n  // TableContainer\r\n  tableContainer: {\r\n    base: 'w-full overflow-hidden border border-gray-200 dark:border-gray-700 rounded-lg ring-1 ring-black ring-opacity-5',\r\n  },\r\n  // TableCell\r\n  tableCell: {\r\n    base: 'px-4 py-3',\r\n  },\r\n  // TableBody\r\n  tableBody: {\r\n    base: 'bg-white divide-y divide-gray-100 dark:divide-gray-700 dark:bg-gray-800 text-gray-700 dark:text-gray-400',\r\n  },\r\n  // DropdownItem\r\n  // this is the <li> that lives inside the Dropdown <ul>\r\n  // you're probably looking for the dropdownItem style inside button\r\n  dropdownItem: {\r\n    base: 'mb-2 last:mb-0',\r\n  },\r\n  // Dropdown\r\n  dropdown: {\r\n    base: 'absolute w-56 p-2 mt-2 text-gray-600 bg-white dark:bg-gray-800 dark:border-gray-700 border border-gray-100 rounded-lg shadow-md min-w-max-content',\r\n    align: {\r\n      left: 'left-0',\r\n      right: 'right-0',\r\n    },\r\n  },\r\n  // Avatar\r\n  avatar: {\r\n    base: 'relative rounded-full inline-block',\r\n    size: {\r\n      large: 'w-10 h-10',\r\n      regular: 'w-8 h-8',\r\n      small: 'w-6 h-6',\r\n    },\r\n  },\r\n  // Modal\r\n  modal: {\r\n    base: 'w-full px-6 py-4 overflow-hidden bg-white rounded-t-lg dark:bg-gray-800 sm:rounded-lg sm:m-4 sm:max-w-xl custom-modal',\r\n  },\r\n  // ModalBody\r\n  modalBody: {\r\n    base: 'mb-6 text-sm text-gray-700 dark:text-gray-400',\r\n  },\r\n  // ModalFooter\r\n  modalFooter: {\r\n    base: 'flex flex-col items-center justify-end px-6 py-3 -mx-6 -mb-4 space-y-3 sm:space-y-0 sm:space-x-4 sm:flex-row bg-gray-50 dark:bg-gray-800',\r\n  },\r\n  // ModalHeader\r\n  modalHeader: {\r\n    base: 'mt-4 mb-2 text-lg font-semibold text-gray-700 dark:text-gray-300',\r\n  },\r\n  // Badge\r\n  badge: {\r\n    base: 'inline-flex px-2 text-xs font-medium leading-5 rounded-full',\r\n    success:\r\n      'text-green-500 bg-green-100 dark:bg-green-800 dark:text-green-100',\r\n    danger: 'text-red-500 bg-red-100 dark:text-red-100 dark:bg-red-800',\r\n    warning: 'text-yellow-500 bg-yellow-100 dark:text-white dark:bg-yellow-600',\r\n    neutral: 'text-gray-500 bg-gray-100 dark:text-gray-100 dark:bg-gray-800',\r\n    primary: 'text-blue-500 bg-blue-100 dark:text-white dark:bg-blue-800',\r\n  },\r\n  // Backdrop\r\n  backdrop: {\r\n    base: 'fixed inset-0 z-40 flex items-end bg-black bg-opacity-50 sm:items-center sm:justify-center',\r\n  },\r\n  // Textarea\r\n  textarea: {\r\n    base: 'block w-full text-sm dark:text-gray-300 rounded-md focus:outline-none form-textarea',\r\n    active:\r\n      'focus:border-purple-400 border-gray-300 dark:border-gray-600 dark:focus:border-gray-600 dark:bg-gray-700 dark:focus:ring-gray-300 focus:ring focus:ring-purple-300',\r\n    disabled: 'cursor-not-allowed opacity-50 bg-gray-300 dark:bg-gray-800',\r\n    valid:\r\n      'border-green-600 dark:bg-gray-700 focus:border-green-400 dark:focus:border-green-400 focus:ring focus:ring-green-200 dark:focus:ring-green-200',\r\n    invalid:\r\n      'border-red-600 dark:bg-gray-700 focus:border-red-400 dark:focus:border-red-400 focus:ring focus:ring-red-200 dark:focus:ring-red-200',\r\n  },\r\n  // Select\r\n  select: {\r\n    base: 'block w-full px-2 py-1 text-sm dark:text-gray-300 focus:outline-none rounded-md form-select',\r\n    active:\r\n      'focus:border-gray-200 border-gray-200 dark:border-gray-600 focus:shadow-none focus:ring focus:ring-green-300 dark:focus:border-gray-500 dark:focus:ring-gray-300 dark:bg-gray-700',\r\n    select: 'leading-5',\r\n    disabled: 'cursor-not-allowed opacity-50 bg-gray-300 dark:bg-gray-800',\r\n    valid:\r\n      'border-green-600 dark:bg-gray-700 focus:border-green-400 dark:focus:border-green-400 focus:ring focus:ring-green-200 dark:focus:ring-green-200',\r\n    invalid:\r\n      'border-red-600 dark:bg-gray-700 focus:border-red-400 dark:focus:border-red-400 focus:ring focus:ring-red-200 dark:focus:ring-red-200',\r\n  },\r\n  // Label\r\n  label: {\r\n    base: 'block text-sm text-gray-700 dark:text-gray-400',\r\n    // check and radio get this same style\r\n    check: 'inline-flex items-center',\r\n    disabled: 'opacity-50 cursor-not-allowed',\r\n  },\r\n  // Input\r\n  input: {\r\n    base: 'block w-full px-3 py-1 text-sm focus:outline-none dark:text-gray-300 leading-5 rounded-md',\r\n    active:\r\n      'focus:border-gray-200 border-gray-200 dark:border-gray-600 focus:ring focus:ring-green-300 dark:focus:border-gray-500 dark:focus:ring-gray-300 dark:bg-gray-700',\r\n    disabled: 'cursor-not-allowed opacity-50 bg-gray-300 dark:bg-gray-800',\r\n    valid:\r\n      'border-green-600 dark:bg-gray-700 focus:border-green-400 dark:focus:border-green-400 focus:ring focus:ring-green-200 dark:focus:ring-green-200',\r\n    invalid:\r\n      'border-red-600 dark:bg-gray-700 focus:border-red-400 dark:focus:border-red-400 focus:ring focus:ring-red-200 dark:focus:ring-red-200',\r\n    radio:\r\n      'text-green-500 form-radio focus:border-green-400 focus:outline-none focus:ring focus:ring-green-300 focus:ring-offset-0 dark:focus:ring-gray-300',\r\n    checkbox:\r\n      'text-green-500 form-checkbox focus:border-green-500 focus:outline-none focus:ring focus:ring-green-300 focus:ring-offset-0 rounded dark:focus:ring-gray-300',\r\n  },\r\n  // HelperText\r\n  helperText: {\r\n    base: 'text-xs',\r\n    valid: 'text-green-600 dark:text-green-400',\r\n    invalid: 'text-red-600 dark:text-red-400',\r\n  },\r\n  // Card\r\n  card: {\r\n    base: 'min-w-0 rounded-lg ring-1 ring-black ring-opacity-4 overflow-hidden',\r\n    default: 'bg-white dark:bg-gray-800',\r\n  },\r\n  cardBody: {\r\n    base: 'p-4',\r\n  },\r\n  // Button\r\n  button: {\r\n    base: 'align-bottom inline-flex items-center justify-center cursor-pointer leading-5 transition-colors duration-150 font-medium focus:outline-none',\r\n    block: 'w-full',\r\n    size: {\r\n      larger: 'px-10 py-4 rounded-lg',\r\n      large: 'px-5 py-3 rounded-lg',\r\n      regular: 'px-4 py-2 rounded-lg text-sm',\r\n      small: 'px-3 py-1 rounded-md text-sm',\r\n      icon: {\r\n        larger: 'p-4 rounded-lg',\r\n        large: 'p-3 rounded-lg',\r\n        regular: 'p-2 rounded-lg',\r\n        small: 'p-2 rounded-md',\r\n      },\r\n      pagination: 'px-3 py-1 rounded-md text-xs',\r\n    },\r\n    // styles applied to the SVG icon\r\n    icon: {\r\n      larger: 'h-5 w-5',\r\n      large: 'h-5 w-5',\r\n      regular: 'h-5 w-5',\r\n      small: 'h-3 w-3',\r\n      left: 'mr-2 -ml-1',\r\n      right: 'ml-2 -mr-1',\r\n    },\r\n    primary: {\r\n      base: 'text-white bg-green-500 border border-transparent',\r\n      active:\r\n        'active:bg-green-600 hover:bg-green-600 focus:ring focus:ring-purple-300',\r\n      disabled: 'opacity-50 cursor-not-allowed',\r\n    },\r\n    outline: {\r\n      base: 'text-gray-600 border-gray-200 border dark:text-gray-400 focus:outline-none',\r\n      active:\r\n        'rounded-lg border border-gray-200 px-4 w-full mr-3 flex items-center justify-center cursor-pointer h-12 bg-gray-200',\r\n      disabled: 'opacity-50 cursor-not-allowed bg-gray-300',\r\n    },\r\n    link: {\r\n      base: 'text-gray-600 dark:text-gray-400 focus:outline-none border border-transparent',\r\n      active:\r\n        'active:bg-transparent hover:bg-gray-100 focus:ring focus:ring-gray-300 dark:hover:bg-gray-500 dark:hover:text-gray-300 dark:hover:bg-opacity-10',\r\n      disabled: 'opacity-50 cursor-not-allowed',\r\n    },\r\n    // this is the button that lives inside the DropdownItem\r\n    dropdownItem: {\r\n      base: 'inline-flex items-center cursor-pointer w-full px-2 py-1 text-sm font-medium transition-colors duration-150 rounded-md hover:bg-gray-100 hover:text-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-200',\r\n    },\r\n  },\r\n};\r\nexport default myTheme;\r\n","import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Windmill } from '@windmill/react-ui';\r\nimport './assets/css/custom.css';\r\nimport './assets/css/tailwind.css';\r\nimport './assets/css/tailwind.output.css';\r\nimport '@pathofdev/react-tag-input/build/index.css';\r\nimport App from './App';\r\nimport myTheme from './assets/theme/myTheme';\r\nimport { AdminProvider } from './context/AdminContext';\r\nimport { SidebarProvider } from './context/SidebarContext';\r\nimport ThemeSuspense from './components/theme/ThemeSuspense';\r\n\r\nReactDOM.render(\r\n  <AdminProvider>\r\n    <SidebarProvider>\r\n      <Suspense fallback={<ThemeSuspense />}>\r\n        <Windmill usePreferences theme={myTheme}>\r\n          <App />\r\n        </Windmill>\r\n      </Suspense>\r\n    </SidebarProvider>\r\n  </AdminProvider>,\r\n\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}